// Generated by CoffeeScript 1.6.3
(function() {
  var DOMAIN_VIMEO, DOMAIN_YOUTUBE, RE_LINK_PREFIX, RE_VALID_LINK, VIMEO_JSON_URL, YOUTUBE_THUMBNAIL_URL, fetchVimeoURL, fetchYouTubeURL;

  String.prototype.format = function() {
    var args;
    args = arguments;
    return this.replace(/{(\d+)}/g, function(match, number) {
      if (typeof args[number] !== "undefined") {
        return args[number];
      } else {
        return match;
      }
    });
  };

  YOUTUBE_THUMBNAIL_URL = "//img.youtube.com/vi/{0}/1.jpg";

  VIMEO_JSON_URL = "http://vimeo.com/api/v2/video/{0}.json";

  window.VIDEO_LINK_TYPE = {
    UNKNOWN: -1,
    YOUTUBE: 0,
    VIMEO: 1
  };

  RE_LINK_PREFIX = /^((https{0,1}):\/\/){0,1}(www\.){0,1}/gi;

  RE_VALID_LINK = /^((https{0,1}):\/\/){0,1}(www\.){0,1}(youtube|vimeo)\.com\/.*/gi;

  DOMAIN_YOUTUBE = "youtube.com";

  DOMAIN_VIMEO = "vimeo.com";

  window.videoIsValidURL = function(url) {
    return url.match(RE_VALID_LINK);
  };

  window.videoIdentifyLink = function(url) {
    if (videoIsValidURL(url)) {
      if (url.match(DOMAIN_YOUTUBE)) {
        return VIDEO_LINK_TYPE.YOUTUBE;
      }
      if (url.match(DOMAIN_YOUTUBE)) {
        return VIDEO_LINK_TYPE.VIMEO;
      }
      return VIDEO_LINK_TYPE.UNKNOWN;
    }
  };

  fetchYouTubeURL = function(url) {
    var intrest_text;
    intrest_text = url.split("v=")[1];
    intrest_text = intrest_text.split(/.{0,1}=/)[0];
    return YOUTUBE_THUMBNAIL_URL.format(intrest_text);
  };

  fetchVimeoURL = function(url) {
    var intrest_text, resp, thumbnail;
    intrest_text = url.split(DOMAIN_VIMEO + "/")[1];
    intrest_text = intrest_text.split("/")[0];
    thumbnail = null;
    resp = request_get({
      url: "/services/vimeo/" + intrest_text + "/"
    });
    thumbnail = resp.data.thumbnail;
    return thumbnail;
  };

  window.videoFetchThumbnailURL = function(url) {
    switch (videoIdentifyLink(url)) {
      case VIDEO_LINK_TYPE.YOUTUBE:
        return fetchYouTubeURL(url);
      case VIDEO_LINK_TYPE.VIMEO:
        return fetchVimeoURL(url);
      default:
        return "/static/images/grey-pixel.png";
    }
  };

}).call(this);
