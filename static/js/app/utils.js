// Generated by CoffeeScript 1.6.3
(function() {
  var PARAMS_DEFAULTS, getCookie, request;

  getCookie = function(name) {
    var cookie, cookieValue, cookies, i;
    if (document.cookie && document.cookie !== "") {
      cookies = document.cookie.split(";");
      i = 0;
      while (i < cookies.length) {
        cookie = jQuery.trim(cookies[i]);
        if (cookie.substring(0, name.length + 1) === (name + "=")) {
          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
          break;
        }
        i++;
      }
    }
    return cookieValue;
  };

  $.ajaxSetup({
    cache: false,
    headers: {
      "X-CSRFToken": getCookie("csrftoken")
    }
  });

  PARAMS_DEFAULTS = {
    method: 'GET',
    async: false,
    data: {},
    dataType: 'json',
    cache: 'false'
  };

  request = function(params) {
    var jsonData, key, success, _i, _len, _ref;
    if (params == null) {
      params = {};
    }
    _ref = Object.keys(PARAMS_DEFAULTS);
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      key = _ref[_i];
      if (params[key] == null) {
        params[key] = PARAMS_DEFAULTS[key];
      }
    }
    jsonData = null;
    success = false;
    $.ajax({
      type: params['method'],
      dataType: params['dataType'],
      url: params['url'],
      data: params['data'],
      async: params['async'],
      success: function(data, status, xhr) {
        success = true;
        return jsonData = data;
      },
      fail: function(data) {
        success = false;
        return jsonData = data;
      },
      complete: function(data, status) {
        if (success === false && jsonData === null) {
          return jsonData = data;
        }
      }
    });
    return {
      success: success,
      data: jsonData
    };
  };

  window.request_get = function(params) {
    if (params == null) {
      params = {};
    }
    params['method'] = 'GET';
    return request(params);
  };

  window.request_post = function(params) {
    if (params == null) {
      params = {};
    }
    params['method'] = 'POST';
    return request(params);
  };

  window.request_put = function(params) {
    if (params == null) {
      params = {};
    }
    params['method'] = 'PUT';
    params['headers'] = {
      'Content-Type': 'x-www-form-urlencoded'
    };
    return request(params);
  };

  window.request_delete = function(params) {
    if (params == null) {
      params = {};
    }
    params['method'] = 'DELETE';
    return request(params);
  };

}).call(this);
